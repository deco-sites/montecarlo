@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {

  /* Allow changing font family via CMS */
  html {
    font-family: var(--font-family);
  }

  mark {
    @apply bg-accent text-accent-content;
  }

  /** Remove default styles from input[type=number] */
  input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Disable scroll once drawer/modal is openned */
  body:has(.drawer-toggle:checked),
  body:has(.modal-toggle:checked) {
    overflow: hidden;
    height: 100vh;
  }
}

@layer components {
  .features {
    @apply flex items-center justify-center gap-6 flex-wrap;
    @apply relative max-w-[1280px] mx-auto;
  }

  .feature-card {
    @apply w-[380px] max-w-[380px] lg:h-[380px] bg-[#F4F4F4] rounded-3xl;
    @apply border-l border-transparent duration-200 whitespace-pre-line text-center;
    @apply flex flex-col items-center justify-start gap-8 py-10 px-8 lg:px-12;
  }
}

.group:disabled .group-disabled\:animate-progress {
  animation: progress-frame ease normal
}

@keyframes progress-frame {
  0% {
    --dot-progress: 0%
  }

  to {
    --dot-progress: 100%
  }
}

@media (max-width: 1024px){

    .customScroll {
    overflow-x: auto;
    overflow-y: scroll;
    box-sizing: content-box;
    display: flex;
    flex: none;
    scroll-snap-align: start;
    padding-bottom: 12px;
  }

  .customScroll::-webkit-scrollbar {
    width: 100%; 
    margin: 10px 10px;
    height: 4px;           /* width of the entire scrollbar */
  }
  .customScroll::-webkit-scrollbar-track {
    background: #F5F3E7;  
    margin:8px;
    border-radius:8px;
    /* color of the tracking area */
  }
  .customScroll::-webkit-scrollbar-thumb {
    background-color: #CAC7B6;    /* color of the scroll thumb */
    border-radius: 20px;       /* roundness of the scroll thumb */ /* creates padding around scroll thumb */
  }
}

.customScrollVertical {
  overflow-x: auto;
  overflow-y: scroll;
  box-sizing: content-box;
  display: flex;
  scroll-snap-align: start;
  padding-bottom: 12px;
}

.customScrollVertical::-webkit-scrollbar {
  width: 4px; 
  height: 100%;           /* width of the entire scrollbar */
}
.customScrollVertical::-webkit-scrollbar-track {
  background: white;  
  margin:8px;
  border-radius:8px;
  /* color of the tracking area */
}
.customScrollVertical::-webkit-scrollbar-thumb {
  background-color: #CAC7B6;    /* color of the scroll thumb */
  border-radius: 20px;       /* roundness of the scroll thumb */ /* creates padding around scroll thumb */
}

.collapse-arrowCustom > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.8rem;
  width: 0.8rem;
  --tw-translate-y: -100%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-duration: 0.2s;
  top: 0.6rem;
  inset-inline-end: 1.4rem;
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}

.collapse-arrowCustom:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after{
  --tw-translate-y: -50%;
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-zoom-in{
  cursor: url("./cursor/zoom-in.svg") 8 8, default;
}
.cursor-zoom-out{
  cursor: url("./cursor/zoom-out.svg") 8 8, default;
}